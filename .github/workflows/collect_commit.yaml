name: 'collect_commit'

on:
  push:
    branches:
      - "dev"
    paths:
      - '*.txt'
      - '**/*.py'
      - '.github/workflows/collect_commit.yaml'
  pull_request:
    branches:
      - "dev"
    paths:
      - '*.txt'
      - '**/*.py'
      - '.github/workflows/collect_commit.yaml'

defaults:
  run:
    shell: bash -el {0}

jobs:
  collect:
    name: collect_commit (self-host)
    runs-on: ascend-arcch64  # actionlint-ignore: runner-label

    container:
      image: quay.io/ascend/cann:8.0.0-910b-ubuntu22.04-py3.10
      volumes:
        - /home/wl/actions-runner/_work/cache:/github/home/.cache/
    steps:
      - name: Config mirrors
        run: |
          sed -i 's|ports.ubuntu.com|mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
          pip config set global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple

      - name: Install dependencies
        run: |
          apt-get update -y 
          apt-get -y install curl git jq gh

      - name: Setup proxy
        run: |
          nohup /github/home/.cache/clash/clash \
          -d ./clash -d /github/home/.cache/clash > /github/home/.cache/clash/clash.log 2>&1 &

          # wait for clash up
          sleep 5
          
          git config --global http.proxy "http://127.0.0.1:7890"
          git config --global https.proxy "http://127.0.0.1:7890" 


      - name: Checkout vllm-project/vllm-ascend repo
        uses: actions/checkout@v4
        with:
          repository: vllm-project/vllm-ascend
          path: ./vllm-ascend
          fetch-depth: 0

      - name: Collect pr info from vllm-project/vllm-ascend
        working-directory: ./vllm-ascend
        run: |
          git log --pretty=format:"%H %s" -- '**/*.py' ':!docs/*' ':!tests/*' ':!examples/*' > commit_log.txt
          
          commit_id_cur=$(curl -k -X POST "${{ secrets.ES_OM_DOMAIN }}/vllm_benchmark_throughput/_search" \
          -H "Content-Type: application/x-ndjson" \
          -H "Authorization: ${{ secrets.ES_OM_AUTHORIZATION }}" \
          -d '{
            "_source": false,
            "size": 10000,
            "query": {
              "match_all": {}
            },
            "sort": [
              {
                "created_at": {
                  "order": "desc"
                }
              }
            ]
          }' | jq -r '.hits.hits[]._id')
          grep -vFf <(echo "$commit_id_cur") commit_log.txt > filtered_commit_log.txt

          if [ -s filtered_commit_log.txt ]; then
            echo "Filtered commit log is not empty."
            cat filtered_commit_log.txt
            exit 0  # 'success'
          else
            echo "Filtered commit log is empty!"
            exit 78  # "skipped"
          fi

          cat filtered_commit_log.txt

      - name: Run benchmark iteration
        working-directory: ./vllm-ascend
        run: |
          while IFS= read -r line; do
            commit_id=$(echo "$line" | awk '{print $1}')
            commit_title=$(echo "$line" | cut -d ' ' -f2-)
            echo "commit_id: $commit_id"
            echo "commit_title: $commit_title"
            echo "------------------------"
            curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"ref\": \"main\", \"inputs\": {\"commit_id\": \"$commit_id\", \"commit_title\": \"$commit_title\"}}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/run_benchmarks.yml/dispatches
          done < filtered_commit_log.txt