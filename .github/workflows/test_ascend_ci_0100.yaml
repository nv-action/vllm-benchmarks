#
# Copyright (c) 2025 Huawei Technologies Co., Ltd. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# This file is a part of the vllm-ascend project.
#

name: 'test_ascend_ci_0100'

on:
    workflow_dispatch:
# Bash shells do not use ~/.profile or ~/.bashrc so these shells need to be explicitly
# declared as "shell: bash -el {0}" on steps that need to be properly activated.
# It's used to activate ascend-toolkit environment variables.
defaults:
  run:
    shell: bash -el {0}

jobs:
  e2e:
    strategy:
      matrix:
        os: [linux-aarch64-a2-1]
        vllm_version: [v0.10.0]
    name: vLLM Ascend test
    runs-on: ${{ matrix.os }}
    container:
      # TODO(yikun): Remove m.daocloud.io prefix when infra proxy ready
      image: swr.cn-southwest-2.myhuaweicloud.com/base_image/ascend-ci/cann:8.2.rc1-910b-ubuntu22.04-py3.11
      env:
        HF_ENDPOINT: https://hf-mirror.com
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
        VLLM_LOGGING_LEVEL: ERROR
    steps:
      - name: Check npu and CANN info
        run: |
          npu-smi info
          cat /usr/local/Ascend/ascend-toolkit/latest/"$(uname -i)"-linux/ascend_toolkit_install.info

      - name: Config mirrors
        run: |
          sed -i 's|ports.ubuntu.com|mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
          pip config set global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple
          apt-get update -y
          apt install git -y
          git config --global url."https://gh-proxy.test.osinfra.cn/https://github.com/".insteadOf https://github.com/

      - name: Checkout vllm-project/vllm-ascend repo
        uses: actions/checkout@v4
        with:
          repository: vllm-project/vllm-ascend
          ref: v0.10.0rc1
          path: ./vllm-ascend

      - name: Install system dependencies
        run: |
          apt-get -y install `cat packages.txt`
          apt-get -y install gcc g++ cmake libnuma-dev

      - name: Checkout vllm-project/vllm repo
        uses: actions/checkout@v4
        with:
          repository: vllm-project/vllm
          ref: ${{ matrix.vllm_version }}
          path: ./vllm-empty

      - name: Install vllm-project/vllm from source
        working-directory: ./vllm-empty
        run: |
          VLLM_TARGET_DEVICE=empty pip install -e .

      - name: Install vllm-project/vllm-ascend
        working-directory: ./vllm-ascend
        run: |
          export PIP_EXTRA_INDEX_URL=https://mirrors.huaweicloud.com/ascend/repos/pypi
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/Ascend/ascend-toolkit/latest/x86_64-linux/devlib
          pip install -r requirements-dev.txt
          pip install -v -e .

      - name: Run vllm-project/vllm-ascend test for V1 Engine
        working-directory: ./vllm-ascend
        env:
          VLLM_WORKER_MULTIPROC_METHOD: spawn
          VLLM_USE_MODELSCOPE: True
        run: |
          if [[ "${{ matrix.os }}" == "linux-aarch64-a2-1" ]]; then
            pytest -sv tests/e2e/singlecard/test_offline_inference.py
            pytest -sv tests/e2e/singlecard/test_ilama_lora.py
            pytest -sv tests/e2e/singlecard/test_guided_decoding.py
            pytest -sv tests/e2e/singlecard/test_camem.py
            pytest -sv tests/e2e/singlecard/test_embedding.py

            # ------------------------------------ v1 spec decode test ------------------------------------ #
            pytest -sv tests/e2e/singlecard/spec_decode_v1/test_v1_mtp_correctness.py
            # TODO: revert me when test_v1_spec_decode.py::test_ngram_correctness is fixed
            pytest -sv tests/e2e/singlecard/spec_decode_v1/test_v1_spec_decode.py

            # All other tests, ignore: 310p test, accuracy test.
            pytest -sv tests/e2e/singlecard/ \
            --ignore=tests/e2e/singlecard/test_offline_inference.py \
            --ignore=tests/e2e/singlecard/test_ilama_lora.py \
            --ignore=tests/e2e/singlecard/test_guided_decoding.py \
            --ignore=tests/e2e/singlecard/test_camem.py \
            --ignore=tests/e2e/singlecard/test_embedding.py \
            --ignore=tests/e2e/singlecard/spec_decode_v1/test_v1_mtp_correctness.py \
            --ignore=tests/e2e/singlecard/spec_decode_v1/test_v1_spec_decode.py \
            --ignore=tests/e2e/singlecard/test_offline_inference_310p.py \
            --ignore=tests/e2e/singlecard/models/test_lm_eval_correctness.py

          else
            pytest -sv tests/e2e/multicard/test_ilama_lora_tp2.py
            # Fixme: run VLLM_USE_MODELSCOPE=True pytest -sv tests/e2e/multicard/test_offline_inference_distributed.py will raise error.
            # To avoid oom, we need to run the test in a single process.
            pytest -sv tests/e2e/multicard/test_offline_inference_distributed.py::test_models_distributed_DeepSeek_multistream_moe
            pytest -sv tests/e2e/multicard/test_offline_inference_distributed.py::test_models_distributed_QwQ
            pytest -sv tests/e2e/multicard/test_offline_inference_distributed.py::test_models_distributed_DeepSeek_dbo
            pytest -sv tests/e2e/multicard/test_offline_inference_distributed.py::test_models_distributed_DeepSeekV3_dbo
            pytest -sv tests/e2e/multicard/test_offline_inference_distributed.py::test_models_distributed_alltoallv
            pytest -sv tests/e2e/multicard/test_offline_inference_distributed.py::test_models_distributed_Qwen3_W4A8DYNAMIC
            pytest -sv tests/e2e/multicard/test_offline_inference_distributed.py::test_models_distributed_DeepSeek_W4A8DYNAMIC
            pytest -sv tests/e2e/multicard/test_data_parallel.py
            pytest -sv tests/e2e/multicard/ --ignore=tests/e2e/multicard/test_ilama_lora_tp2.py \
              --ignore=tests/e2e/multicard/test_offline_inference_distributed.py \
              --ignore=tests/e2e/multicard/test_data_parallel.py \
              --ignore=tests/e2e/multicard/test_offline_inference_310p.py
          fi
