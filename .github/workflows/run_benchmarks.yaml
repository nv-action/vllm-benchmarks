name: 'benchmarks'

on:
  schedule:
    - cron: '0 13 * * *'  


# Bash shells do not use ~/.profile or ~/.bashrc so these shells need to be explicitly
# declared as "shell: bash -el {0}" on steps that need to be properly activated.
# It's used to activate ascend-toolkit environment variables.
defaults:
  run:
    shell: bash -el {0}

jobs:
  test:
    name: run benchmarks (self-host)
    runs-on: self-hosted  # actionlint-ignore: runner-label

    container:
      image: quay.io/ascend/cann:8.0.0-910b-ubuntu22.04-py3.10
      volumes:
        - /usr/local/dcmi:/usr/local/dcmi
        - /usr/local/bin/npu-smi:/usr/local/bin/npu-smi
        - /usr/local/Ascend/driver/lib64/:/usr/local/Ascend/driver/lib64/
        - /home/perf-runner/action-runner/_work/cache:/github/home/.cache/
      options: >-
        --device /dev/davinci6
        --device /dev/davinci_manager
        --device /dev/devmm_svm
        --device /dev/hisi_hdc
      env:
        HF_ENDPOINT: https://hf-mirror.com
        SHAREGPT_PATH: /github/home/.cache/datasets/ShareGPT_V3_unfiltered_cleaned_split.json
        LLAMA_3_1_8B_PATH: /github/home/.cache/models/Meta-Llama-3-8B-Instruct
        ES_OM_DOMAIN: ${{ secrets.ES_OM_DOMAIN }}
        ES_OM_AUTHORIZATION: ${{ secrets.ES_OM_AUTHORIZATION }}
    steps:
      - name: Check npu and CANN info
        run: |
          npu-smi info
          cat /usr/local/Ascend/ascend-toolkit/latest/"$(uname -i)"-linux/ascend_toolkit_install.info

      - name: Check env var
        run: |
          ls "${SHAREGPT_PATH}"
          ls "${LLAMA_3_1_8B_PATH}"
          echo ${RESULTS_FOLDER}
          echo $ES_OM_DOMAIN
          echo $ES_OM_AUTHORIZATION

      - name: Config mirrors
        run: |
          pip config set global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple

      - name: Install system dependencies
        run: |
          apt-get update -y
          apt-get -y install git jq wget curl lsof

      - name: Setup proxy
        run: |
          nohup /github/home/.cache/clash/clash \
          -d ./clash -d /github/home/.cache/clash > /dev/null 2>&1 &

          # wait for clash up
          sleep 5
          
          git config --global http.proxy "http://127.0.0.1:7890"
          git config --global https.proxy "http://127.0.0.1:7890" 

      - name: Checkout vllm-project/vllm repo
        uses: actions/checkout@v4
        with:
          repository: vllm-project/vllm
          path: ./

      - name: Checkout vllm-project/vllm-ascend repo
        uses: actions/checkout@v4
        with:
          repository: vllm-project/vllm-ascend
          path: ./vllm-ascend

      - name: Install vllm-project/vllm from source
        run: |
          VLLM_TARGET_DEVICE=empty pip install -e .

      - name: Install vllm-project/vllm-ascend
        working-directory: ./vllm-ascend
        run: |
          git log
          pip install -e .

      - name: Install pta
        run: |
          mkdir pta
          cd pta
          wget https://pytorch-package.obs.cn-north-4.myhuaweicloud.com/pta/Daily/v2.5.1/20250308.3/pytorch_v2.5.1_py310.tar.gz
          tar -xvf pytorch_v2.5.1_py310.tar.gz
          pip install ./torch_npu-2.5.1.dev20250308-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl
          cd ..
          rm -rf pta

      - name: Checkout nv-action/vllm-benchmarks repo
        uses: actions/checkout@v4
        with:
          repository: nv-action/vllm-benchmarks
          path: ./vllm-benchmarks
          ref: analysis
      
      - name: Install benchmark dependencies
        working-directory: ./vllm-benchmarks
        run: |
          pip install -r requirements.txt

      - name: Run benchmark iteration
        working-directory: ./vllm-benchmarks
        run: |
          commit_id=$(git -C ../vllm-ascend rev-parse HEAD)
          bash .elastic/nightly-benchmarks/scripts/run-performance-benchmarks.sh "$commit_id"
