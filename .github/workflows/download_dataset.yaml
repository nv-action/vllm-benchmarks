#
# Copyright (c) 2025 Huawei Technologies Co., Ltd. All Rights Reserved.
# This file is a part of the vllm-ascend project.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: 'download datasets'

on:
  workflow_dispatch:
    inputs:
      dataset:
        required: true
        type: string
        description: '要下载的数据集名称，例如：“username/dataset-name”'
      image:
        required: true
        type: choice
        options:
          - m.daocloud.io/quay.io/ascend/cann:8.1.rc1-910b-ubuntu22.04-py3.10
        default: 'ascendai/cann:8.0.0-910b-ubuntu22.04-py3.10'
        description: '将用于执行下载任务的 Docker 镜像'

defaults:
  run:
    shell: bash -el {0}

jobs:
  download:
    name: Download dataset from Hugging Face Hub
    runs-on: linux-arm64-npu-0
    container:
      image: ${{ inputs.image }}
      env:
        HF_ENDPOINT: https://hf-mirror.com
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
        HF_HUB_ETAG_TIMEOUT: 600
        HF_HUB_DOWNLOAD_TIMEOUT: 600
        CURL_CA_BUNDLE: ""
    steps:
      - name: 配置系统镜像源
        run: |
          sed -i 's|ports.ubuntu.com|mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
          pip config set global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple

      - name: 安装依赖
        run: |
          pip install --upgrade pip
          pip install huggingface-hub datasets

      - name: 显示 HF_TOKEN 前缀，确认已传入
        run: |
          echo "HF_TOKEN prefix: ${HF_TOKEN:0:4}****"

      - name: 从 Hugging Face Hub 下载并加载数据集
        run: |
          python3 - << 'EOF'
          import os
          from datasets import load_dataset

          # 直接用 GitHub Actions 的 inputs.dataset 变量
          repo_id = "${{ inputs.dataset }}"

          # load_dataset 会自动下载脚本并执行，抓取实际数据
          ds = load_dataset(
              repo_id,
              cache_dir="/root/.cache/huggingface",   # 脚本和数据都缓存到这里
          )

          # 打印下载结果，确认哪些 split 可用
          print("下载完毕，包含的 split：", ds.keys())
          print("缓存路径示例：", os.path.join("/root/.cache/huggingface", "datasets", repo_id.replace('/', '_')))
          EOF
