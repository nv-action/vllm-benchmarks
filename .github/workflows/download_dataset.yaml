name: 'download datasets'

on:
  workflow_dispatch:
    inputs:
      dataset:
        required: true
        type: string
        default: 'hails/mmlu_no_train'
        description: '要下载的数据集名称，例如：“username/dataset-name”'
      image:
        required: true
        type: choice
        options:
          - m.daocloud.io/quay.io/ascend/cann:8.1.rc1-910b-ubuntu22.04-py3.10
        default: 'ascendai/cann:8.0.0-910b-ubuntu22.04-py3.10'
        description: '将用于执行下载任务的 Docker 镜像'

defaults:
  run:
    shell: bash -el {0}

jobs:
  download:
    name: Download & load dataset from Hugging Face Hub
    runs-on: linux-arm64-npu-2
    container:
      image: ${{ inputs.image }}
      env:
        # 已去掉不完整的 HF_ENDPOINT，使用默认官方 Hugging Face Hub
        HF_TOKEN: ${{ secrets.HF_TOKEN }}             
        HF_HUB_ETAG_TIMEOUT: 600
        HF_HUB_DOWNLOAD_TIMEOUT: 600
        CURL_CA_BUNDLE: ""
    steps:
      - name: 配置系统镜像源
        run: |
          sed -i 's|ports.ubuntu.com|mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
          pip config set global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple

      - name: 安装依赖
        run: |
          pip install --upgrade pip
          pip install huggingface-hub datasets

      - name: 显示 HF_TOKEN 前缀，确认已传入
        run: |
          echo "HF_TOKEN prefix: ${HF_TOKEN:0:4}****"

      - name: 下载并加载 MMLU 数据集
        run: |
          python3 - << 'EOF'
          import os
          from datasets import load_dataset

          # 用户输入的 dataset（这里默认 hails/mmlu_no_train）
          repo_id = "${{ inputs.dataset }}"

          # 明确指定 config name="all"，触发脚本下载并解包 Parquet 文件。
          ds = load_dataset(
              repo_id,
              name="all",                        # 加载所有 split
              cache_dir="/root/.cache/huggingface"  
          )

          # 打印各 split，确认下载成功
          print("下载完毕，包含的 split：", ds.keys())
          print("示例文件缓存路径：", 
                os.path.join("/root/.cache/huggingface", 
                             "datasets", 
                             repo_id.replace('/', '_'), 
                             "all"))
          EOF
