name: 'benchmarks'

on:
  push:
    branches:
      - 'main'
    paths:
      - '.github/workflows/test_es.yaml'
      - '!docs/**'


# Bash shells do not use ~/.profile or ~/.bashrc so these shells need to be explicitly
# declared as "shell: bash -el {0}" on steps that need to be properly activated.
# It's used to activate ascend-toolkit environment variables.
defaults:
  run:
    shell: bash -el {0}

jobs:
  test:
    name: run benchmarks (self-host)
    runs-on: self-hosted  # actionlint-ignore: runner-label

    container:
      image: quay.io/ascend/cann:8.0.0-910b-ubuntu22.04-py3.10
      volumes:
        - /usr/local/dcmi:/usr/local/dcmi
        - /usr/local/bin/npu-smi:/usr/local/bin/npu-smi
        - /usr/local/Ascend/driver/lib64/:/usr/local/Ascend/driver/lib64/
        - /home/perf-runner/action-runner/_work/cache:/github/home/.cache/
      options: >-
        --device /dev/davinci6
        --device /dev/davinci_manager
        --device /dev/devmm_svm
        --device /dev/hisi_hdc
      env:
        HF_ENDPOINT: https://hf-mirror.com
        SHAREGPT_PATH: /github/home/.cache/datasets/ShareGPT_V3_unfiltered_cleaned_split.json
        LLAMA_3_1_8B_PATH: /github/home/.cache/models/Meta-Llama-3-8B-Instruct
        ES_OM_DOMAIN: ${{ secrets.ES_OM_DOMAIN }}
        ES_OM_AUTHORIZATION: ${{ secrets.ES_OM_AUTHORIZATION }}
        QWEN_2_5_PATH: /github/home/.cache/models/Qwen2.5-VL-7B-Instruct
    steps:
      - name: Check npu and CANN info
        run: |
          npu-smi info
          cat /usr/local/Ascend/ascend-toolkit/latest/"$(uname -i)"-linux/ascend_toolkit_install.info

      - name: Check env var
        run: |
          echo ${SHAREGPT_PATH}
          echo ${LLAMA_3_1_8B_PATH}
          echo ${RESULTS_FOLDER}
          echo $ES_OM_DOMAIN
          echo $ES_OM_AUTHORIZATION

      - name: Config mirrors
        run: |
          # sed -i 's|ports.ubuntu.com|mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
          pip config set global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple

      - name: Install system dependencies
        run: |
          apt-get update -y
          apt-get -y install git jq wget curl lsof

      - name: Setup proxy
        run: |
          nohup /github/home/.cache/clash/clash \
          -d ./clash -d /github/home/.cache/clash > /dev/null 2>&1 &

          # wait for clash up
          sleep 5
          
          git config --global http.proxy "http://127.0.0.1:7890"
          git config --global https.proxy "http://127.0.0.1:7890" 
          

      - name: Checkout vllm-project/vllm-ascend repo
        uses: actions/checkout@v4
        with:
          repository: vllm-project/vllm-ascend
          path: ./vllm-ascend
          fetch-depth: 0

      - name: Collect pr info from vllm-project/vllm-ascend
        working-directory: ./vllm-ascend
        run: |
          git log --pretty=format:"%H %s" -- '**/*.py' ':!docs/*' ':!tests/*' ':!examples/*' > commit_log.txt
          cat commit_log.txt
          
          commit_id_cur=$(curl -k -X POST "${{ secrets.ES_OM_DOMAIN }}/vllm_benchmark_throughput/_search" \
          -H "Content-Type: application/x-ndjson" \
          -H "Authorization: ${{ secrets.ES_OM_AUTHORIZATION }}" \
          -d '{
            "_source": false,
            "size": 10000,
            "query": {
              "match_all": {}
            },
            "sort": [
              {
                "created_at": {
                  "order": "desc"
                }
              }
            ]
          }' | jq -r '.hits.hits[]._id')

          echo "cur_commit_id: $commit_id_cur "

          grep -vFf <(echo "${commit_id_cur%%_*}") commit_log.txt > filtered_commit_log.txt

          if [ -s filtered_commit_log.txt ]; then
            echo "\nFiltered commit log is not empty."
            cat filtered_commit_log.txt
            exit 0  # 'success'
          else
            echo "Filtered commit log is empty!"
            exit 78  # "skipped"
          fi
